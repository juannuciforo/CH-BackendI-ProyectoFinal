<div class="container">
    <h1 class="center-align">Carrito de Compras</h1>

    {{#if cart.products.length}}
    <div style="max-height: 60vh; overflow-y: auto; margin-top: 20px;">
        <table class="striped bordered centered responsive-table">
            <thead>
                <tr>
                    <th>Producto</th>
                    <th>Descripción</th>
                    <th>Precio</th>
                    <th>Cantidad</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                {{#each cart.products}}
                <tr>
                    <td>{{this.product.title}}</td>
                    <td>{{this.product.description}}</td>
                    <td>${{this.product.price}}</td>
                    <td>{{this.quantity}}</td>
                    <td>
                        <button class="btn-small red"
                            onclick="removeProduct('{{../cart._id}}', '{{this.product._id}}')">
                            <i class="material-icons">delete</i>
                        </button>
                    </td>
                </tr>
                {{/each}}
            </tbody>
        </table>

        <div class="card grey lighten-4" style="margin-top: 20px;">
            <div class="card-content">
                <button class="btn red" onclick="clearCart('{{cart._id}}')">
                    Vaciar Carrito
                    <i class="material-icons right">remove_shopping_cart</i>
                </button>
            </div>
        </div>
    </div>
    {{else}}
    <div class="center-align">
        <h4 class="grey-text">El carrito está vacío</h4>
        <a href="/" class="btn waves-effect waves-light">
            Ir a Productos
            <i class="material-icons right">shopping_cart</i>
        </a>
    </div>
    {{/if}}

    <div class="center-align" style="margin-top: 20px;">
        <button onclick="window.history.back()" class="btn waves-effect waves-light">
            Volver
            <i class="material-icons right">arrow_back</i>
        </button>
    </div>
</div>

<script>
    async function updateQuantity(cartId, productId, quantity) {
        try {
            const response = await fetch(`/api/carts/${cartId}/products/${productId}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ quantity: parseInt(quantity) })
            });

            if (!response.ok) throw new Error('Error al actualizar cantidad');

            location.reload();
        } catch (error) {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'No se pudo actualizar la cantidad'
            });
        }
    }

    async function removeProduct(cartId, productId) {
        try {
            const result = await Swal.fire({
                title: '¿Estás seguro?',
                text: "Se eliminará el producto del carrito",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Sí, eliminar',
                cancelButtonText: 'Cancelar'
            });

            if (result.isConfirmed) {
                const response = await fetch(`/api/carts/${cartId}/products/${productId}`, {
                    method: 'DELETE'
                });

                if (!response.ok) throw new Error('Error al eliminar producto');

                location.reload();
            }
        } catch (error) {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'No se pudo eliminar el producto'
            });
        }
    }

    async function clearCart(cartId) {
        try {
            const result = await Swal.fire({
                title: '¿Estás seguro?',
                text: "Se eliminarán todos los productos del carrito",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Sí, vaciar carrito',
                cancelButtonText: 'Cancelar'
            });

            if (result.isConfirmed) {
                const response = await fetch(`/api/carts/${cartId}`, {
                    method: 'DELETE'
                });

                if (!response.ok) throw new Error('Error al vaciar carrito');

                location.reload();
            }
        } catch (error) {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'No se pudo vaciar el carrito'
            });
        }
    }
</script>